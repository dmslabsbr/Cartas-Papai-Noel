version: '3.8'

services:
  # Aplicação Noel
  noel-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: noel-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Configurações da aplicação
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql+psycopg://noel_user:${POSTGRES_PASSWORD}@postgres:5432/noel_db
      - SESSION_SECRET_KEY=${SESSION_SECRET_KEY}
      - SESSION_MAX_AGE=86400
      
      # MinIO
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET=cartas
      - MINIO_SECURE=false
      
      # LDAP
      - LDAP_API_URL=${LDAP_API_URL}
      
      # Thumbnails
      - THUMB_SIZE=150x200
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - noel_logs:/app/logs
    networks:
      - noel-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: noel-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=noel_db
      - POSTGRES_USER=noel_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - noel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U noel_user -d noel_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: noel-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - noel-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client para inicialização do bucket
  minio-init:
    image: minio/mc:latest
    container_name: noel-minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      mc mb minio/cartas --ignore-existing;
      mc policy set public minio/cartas;
      echo 'MinIO bucket cartas criado e configurado com sucesso';
      "
    networks:
      - noel-network

  # Nginx Reverse Proxy (opcional)
  nginx:
    image: nginx:alpine
    container_name: noel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - noel-app
    networks:
      - noel-network

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  noel_logs:
    driver: local

networks:
  noel-network:
    driver: bridge
