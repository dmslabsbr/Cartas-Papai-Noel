# ===========================================
# DOCKER COMPOSE OVERRIDE PARA DESENVOLVIMENTO
# ===========================================
# Este arquivo é usado automaticamente pelo docker compose
# para sobrescrever configurações do docker-compose.yml principal
# durante o desenvolvimento local

version: '3.8'

services:
  # Aplicação Noel - Configurações de Desenvolvimento
  noel-app:
    build:
      target: builder  # Usar stage de build para desenvolvimento
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+psycopg://noel_user:${POSTGRES_PASSWORD}@postgres:5432/noel_db
    volumes:
      # Montar código fonte para hot reload
      - ./app:/app/app:ro
      - ./alembic:/app/alembic:ro
      - ./alembic.ini:/app/alembic.ini:ro
      - ./VERSION:/app/VERSION:ro
      # Logs locais
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # PostgreSQL - Configurações de Desenvolvimento
  postgres:
    ports:
      - "5432:5432"  # Expor porta para acesso direto
    environment:
      - POSTGRES_DB=noel_db
      - POSTGRES_USER=noel_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      # Scripts de inicialização
      - ./db/init:/docker-entrypoint-initdb.d:ro
      # Dados persistentes
      - postgres_dev_data:/var/lib/postgresql/data

  # MinIO - Configurações de Desenvolvimento
  minio:
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio_dev_data:/data

  # Nginx - Desabilitado em desenvolvimento
  nginx:
    profiles:
      - production  # Só executa com --profile production

volumes:
  postgres_dev_data:
    driver: local
  minio_dev_data:
    driver: local
